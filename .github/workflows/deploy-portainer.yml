name: Trigger Portainer Build

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Portainer Stack Update
        env:
          PORTAINER_URL: 'https://5.161.118.67:9443'
          PORTAINER_USER: ${{ secrets.PORTAINER_USER }}
          PORTAINER_PASS: ${{ secrets.PORTAINER_PASS }}
          STACK_ID: ${{ secrets.PORTAINER_STACK_ID }}
          ENDPOINT_ID: ${{ secrets.PORTAINER_ENDPOINT_ID }}
        run: |
          # Debug output for secrets
          echo "Using Stack ID: $STACK_ID"
          echo "Using Endpoint ID: $ENDPOINT_ID"
          
          # Get JWT token with error handling
          echo "Attempting authentication..."
          response=$(curl -k -s -X POST "$PORTAINER_URL/api/auth" \
            -H "Content-Type: application/json" \
            -d "{\"Username\":\"$PORTAINER_USER\",\"Password\":\"$PORTAINER_PASS\"}")
          
          # Check if jq is available and parse JWT
          if ! command -v jq &> /dev/null; then
            echo "❌ jq command not found. Cannot parse JWT."
            exit 1
          fi
          jwt=$(echo "$response" | jq -r '.jwt')

          # Validate JWT - Moved this check *before* the success message
          if [ -z "$jwt" ] || [ "$jwt" = "null" ]; then
            echo "❌ Authentication failed. Response: $response"
            exit 1
          fi
          
          # If we reach here, authentication was successful
          echo "✅ Successfully obtained JWT token"

          # Trigger stack update with validation
          if [ -z "$STACK_ID" ] || [ -z "$ENDPOINT_ID" ]; then
            echo "❌ Missing Stack ID or Endpoint ID. Check GitHub Secrets."
            exit 1
          fi
          
          echo "Triggering redeploy of stack $STACK_ID..."
          # Added -v for verbose output on the redeploy step too
          curl -k -v -X POST \  
            "$PORTAINER_URL/api/stacks/$STACK_ID/git/redeploy?endpointId=$ENDPOINT_ID" \
            -H "Authorization: Bearer $jwt" \
            -H "Content-Type: application/json"
